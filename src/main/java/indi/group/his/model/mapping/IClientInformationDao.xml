<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="indi.group.his.dao.IClientInformationDao">
  <resultMap id="BaseResultMap" type="indi.group.his.model.ClientInformation">
    <id column="client_id" jdbcType="INTEGER" property="clientId" />
    <result column="client_telephone" jdbcType="VARCHAR" property="clientTelephone" />
    <result column="client_intentionlist" jdbcType="VARCHAR" property="clientIntentionlist" />
    <result column="purchase_history" jdbcType="VARCHAR" property="purchaseHistory" />
    <result column="performance_total" jdbcType="VARCHAR" property="performanceTotal" />
    <result column="intention_area" jdbcType="REAL" property="intentionArea" />
    <result column="intention_price" jdbcType="REAL" property="intentionPrice" />
    <result column="client_name" jdbcType="VARCHAR" property="clientName" />
    <result column="client_sex" jdbcType="BIT" property="clientSex" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    client_id, client_telephone, client_intentionlist, purchase_history, performance_total, 
    intention_area, intention_price, client_name, client_sex
  </sql>
  <select id="selectByExample" parameterType="indi.group.his.model.ClientInformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from client_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from client_information
    where client_id = #{clientId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from client_information
    where client_id = #{clientId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="indi.group.his.model.ClientInformationExample">
    delete from client_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="indi.group.his.model.ClientInformation">
    insert into client_information (client_id, client_telephone, client_intentionlist, 
      purchase_history, performance_total, intention_area, 
      intention_price, client_name, client_sex
      )
    values (#{clientId,jdbcType=INTEGER}, #{clientTelephone,jdbcType=VARCHAR}, #{clientIntentionlist,jdbcType=VARCHAR}, 
      #{purchaseHistory,jdbcType=VARCHAR}, #{performanceTotal,jdbcType=VARCHAR}, #{intentionArea,jdbcType=REAL}, 
      #{intentionPrice,jdbcType=REAL}, #{clientName,jdbcType=VARCHAR}, #{clientSex,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="indi.group.his.model.ClientInformation">
    insert into client_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clientId != null">
        client_id,
      </if>
      <if test="clientTelephone != null">
        client_telephone,
      </if>
      <if test="clientIntentionlist != null">
        client_intentionlist,
      </if>
      <if test="purchaseHistory != null">
        purchase_history,
      </if>
      <if test="performanceTotal != null">
        performance_total,
      </if>
      <if test="intentionArea != null">
        intention_area,
      </if>
      <if test="intentionPrice != null">
        intention_price,
      </if>
      <if test="clientName != null">
        client_name,
      </if>
      <if test="clientSex != null">
        client_sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clientId != null">
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="clientTelephone != null">
        #{clientTelephone,jdbcType=VARCHAR},
      </if>
      <if test="clientIntentionlist != null">
        #{clientIntentionlist,jdbcType=VARCHAR},
      </if>
      <if test="purchaseHistory != null">
        #{purchaseHistory,jdbcType=VARCHAR},
      </if>
      <if test="performanceTotal != null">
        #{performanceTotal,jdbcType=VARCHAR},
      </if>
      <if test="intentionArea != null">
        #{intentionArea,jdbcType=REAL},
      </if>
      <if test="intentionPrice != null">
        #{intentionPrice,jdbcType=REAL},
      </if>
      <if test="clientName != null">
        #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="clientSex != null">
        #{clientSex,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update client_information
    <set>
      <if test="record.clientId != null">
        client_id = #{record.clientId,jdbcType=INTEGER},
      </if>
      <if test="record.clientTelephone != null">
        client_telephone = #{record.clientTelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.clientIntentionlist != null">
        client_intentionlist = #{record.clientIntentionlist,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseHistory != null">
        purchase_history = #{record.purchaseHistory,jdbcType=VARCHAR},
      </if>
      <if test="record.performanceTotal != null">
        performance_total = #{record.performanceTotal,jdbcType=VARCHAR},
      </if>
      <if test="record.intentionArea != null">
        intention_area = #{record.intentionArea,jdbcType=REAL},
      </if>
      <if test="record.intentionPrice != null">
        intention_price = #{record.intentionPrice,jdbcType=REAL},
      </if>
      <if test="record.clientName != null">
        client_name = #{record.clientName,jdbcType=VARCHAR},
      </if>
      <if test="record.clientSex != null">
        client_sex = #{record.clientSex,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update client_information
    set client_id = #{record.clientId,jdbcType=INTEGER},
      client_telephone = #{record.clientTelephone,jdbcType=VARCHAR},
      client_intentionlist = #{record.clientIntentionlist,jdbcType=VARCHAR},
      purchase_history = #{record.purchaseHistory,jdbcType=VARCHAR},
      performance_total = #{record.performanceTotal,jdbcType=VARCHAR},
      intention_area = #{record.intentionArea,jdbcType=REAL},
      intention_price = #{record.intentionPrice,jdbcType=REAL},
      client_name = #{record.clientName,jdbcType=VARCHAR},
      client_sex = #{record.clientSex,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="indi.group.his.model.ClientInformation">
    update client_information
    <set>
      <if test="clientTelephone != null">
        client_telephone = #{clientTelephone,jdbcType=VARCHAR},
      </if>
      <if test="clientIntentionlist != null">
        client_intentionlist = #{clientIntentionlist,jdbcType=VARCHAR},
      </if>
      <if test="purchaseHistory != null">
        purchase_history = #{purchaseHistory,jdbcType=VARCHAR},
      </if>
      <if test="performanceTotal != null">
        performance_total = #{performanceTotal,jdbcType=VARCHAR},
      </if>
      <if test="intentionArea != null">
        intention_area = #{intentionArea,jdbcType=REAL},
      </if>
      <if test="intentionPrice != null">
        intention_price = #{intentionPrice,jdbcType=REAL},
      </if>
      <if test="clientName != null">
        client_name = #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="clientSex != null">
        client_sex = #{clientSex,jdbcType=BIT},
      </if>
    </set>
    where client_id = #{clientId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="indi.group.his.model.ClientInformation">
    update client_information
    set client_telephone = #{clientTelephone,jdbcType=VARCHAR},
      client_intentionlist = #{clientIntentionlist,jdbcType=VARCHAR},
      purchase_history = #{purchaseHistory,jdbcType=VARCHAR},
      performance_total = #{performanceTotal,jdbcType=VARCHAR},
      intention_area = #{intentionArea,jdbcType=REAL},
      intention_price = #{intentionPrice,jdbcType=REAL},
      client_name = #{clientName,jdbcType=VARCHAR},
      client_sex = #{clientSex,jdbcType=BIT}
    where client_id = #{clientId,jdbcType=INTEGER}
  </update>
</mapper>