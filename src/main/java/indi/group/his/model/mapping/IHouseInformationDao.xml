<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="indi.group.his.dao.IHouseInformationDao">
  <resultMap id="BaseResultMap" type="indi.group.his.model.HouseInformation">
    <id column="houses_id" jdbcType="INTEGER" property="housesId" />
    <result column="client_telephone" jdbcType="VARCHAR" property="clientTelephone" />
    <result column="houses_opentime" jdbcType="VARCHAR" property="housesOpentime" />
    <result column="deal_History" jdbcType="VARCHAR" property="dealHistory" />
    <result column="employee_list" jdbcType="VARCHAR" property="employeeList" />
    <result column="houses_area" jdbcType="REAL" property="housesArea" />
    <result column="houses_price" jdbcType="REAL" property="housesPrice" />
    <result column="houses_name" jdbcType="VARCHAR" property="housesName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    houses_id, client_telephone, houses_opentime, deal_History, employee_list, houses_area, 
    houses_price, houses_name
  </sql>
  <select id="selectByExample" parameterType="indi.group.his.model.HouseInformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from house_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from house_information
    where houses_id = #{housesId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from house_information
    where houses_id = #{housesId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="indi.group.his.model.HouseInformationExample">
    delete from house_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="indi.group.his.model.HouseInformation">
    insert into house_information (houses_id, client_telephone, houses_opentime, 
      deal_History, employee_list, houses_area, 
      houses_price, houses_name)
    values (#{housesId,jdbcType=INTEGER}, #{clientTelephone,jdbcType=VARCHAR}, #{housesOpentime,jdbcType=VARCHAR}, 
      #{dealHistory,jdbcType=VARCHAR}, #{employeeList,jdbcType=VARCHAR}, #{housesArea,jdbcType=REAL}, 
      #{housesPrice,jdbcType=REAL}, #{housesName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="indi.group.his.model.HouseInformation">
    insert into house_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="housesId != null">
        houses_id,
      </if>
      <if test="clientTelephone != null">
        client_telephone,
      </if>
      <if test="housesOpentime != null">
        houses_opentime,
      </if>
      <if test="dealHistory != null">
        deal_History,
      </if>
      <if test="employeeList != null">
        employee_list,
      </if>
      <if test="housesArea != null">
        houses_area,
      </if>
      <if test="housesPrice != null">
        houses_price,
      </if>
      <if test="housesName != null">
        houses_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="housesId != null">
        #{housesId,jdbcType=INTEGER},
      </if>
      <if test="clientTelephone != null">
        #{clientTelephone,jdbcType=VARCHAR},
      </if>
      <if test="housesOpentime != null">
        #{housesOpentime,jdbcType=VARCHAR},
      </if>
      <if test="dealHistory != null">
        #{dealHistory,jdbcType=VARCHAR},
      </if>
      <if test="employeeList != null">
        #{employeeList,jdbcType=VARCHAR},
      </if>
      <if test="housesArea != null">
        #{housesArea,jdbcType=REAL},
      </if>
      <if test="housesPrice != null">
        #{housesPrice,jdbcType=REAL},
      </if>
      <if test="housesName != null">
        #{housesName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update house_information
    <set>
      <if test="record.housesId != null">
        houses_id = #{record.housesId,jdbcType=INTEGER},
      </if>
      <if test="record.clientTelephone != null">
        client_telephone = #{record.clientTelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.housesOpentime != null">
        houses_opentime = #{record.housesOpentime,jdbcType=VARCHAR},
      </if>
      <if test="record.dealHistory != null">
        deal_History = #{record.dealHistory,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeList != null">
        employee_list = #{record.employeeList,jdbcType=VARCHAR},
      </if>
      <if test="record.housesArea != null">
        houses_area = #{record.housesArea,jdbcType=REAL},
      </if>
      <if test="record.housesPrice != null">
        houses_price = #{record.housesPrice,jdbcType=REAL},
      </if>
      <if test="record.housesName != null">
        houses_name = #{record.housesName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update house_information
    set houses_id = #{record.housesId,jdbcType=INTEGER},
      client_telephone = #{record.clientTelephone,jdbcType=VARCHAR},
      houses_opentime = #{record.housesOpentime,jdbcType=VARCHAR},
      deal_History = #{record.dealHistory,jdbcType=VARCHAR},
      employee_list = #{record.employeeList,jdbcType=VARCHAR},
      houses_area = #{record.housesArea,jdbcType=REAL},
      houses_price = #{record.housesPrice,jdbcType=REAL},
      houses_name = #{record.housesName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="indi.group.his.model.HouseInformation">
    update house_information
    <set>
      <if test="clientTelephone != null">
        client_telephone = #{clientTelephone,jdbcType=VARCHAR},
      </if>
      <if test="housesOpentime != null">
        houses_opentime = #{housesOpentime,jdbcType=VARCHAR},
      </if>
      <if test="dealHistory != null">
        deal_History = #{dealHistory,jdbcType=VARCHAR},
      </if>
      <if test="employeeList != null">
        employee_list = #{employeeList,jdbcType=VARCHAR},
      </if>
      <if test="housesArea != null">
        houses_area = #{housesArea,jdbcType=REAL},
      </if>
      <if test="housesPrice != null">
        houses_price = #{housesPrice,jdbcType=REAL},
      </if>
      <if test="housesName != null">
        houses_name = #{housesName,jdbcType=VARCHAR},
      </if>
    </set>
    where houses_id = #{housesId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="indi.group.his.model.HouseInformation">
    update house_information
    set client_telephone = #{clientTelephone,jdbcType=VARCHAR},
      houses_opentime = #{housesOpentime,jdbcType=VARCHAR},
      deal_History = #{dealHistory,jdbcType=VARCHAR},
      employee_list = #{employeeList,jdbcType=VARCHAR},
      houses_area = #{housesArea,jdbcType=REAL},
      houses_price = #{housesPrice,jdbcType=REAL},
      houses_name = #{housesName,jdbcType=VARCHAR}
    where houses_id = #{housesId,jdbcType=INTEGER}
  </update>
</mapper>