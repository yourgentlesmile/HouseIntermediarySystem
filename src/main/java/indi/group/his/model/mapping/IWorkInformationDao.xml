<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="indi.group.his.dao.IWorkInformationDao">
  <resultMap id="BaseResultMap" type="indi.group.his.model.WorkInformation">
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_telephone" jdbcType="VARCHAR" property="userTelephone" />
    <result column="client_list" jdbcType="VARCHAR" property="clientList" />
    <result column="performance_now" jdbcType="VARCHAR" property="performanceNow" />
    <result column="performance_total" jdbcType="VARCHAR" property="performanceTotal" />
    <result column="follow_list" jdbcType="VARCHAR" property="followList" />
    <result column="area" jdbcType="VARCHAR" property="area" />
  </resultMap>
  <resultMap type="indi.group.his.model.WorkInfoUnionUser" id="WorkInfoUnionUserQuery">
    <result column="user_id" jdbcType="INTEGER" property="userId"/>
    <result column="user_name" jdbcType="VARCHAR" property="userName"/>
    <result column="performance_now" jdbcType="VARCHAR" property="performanceNow"/>
    <result column="performance_total" jdbcType="VARCHAR" property="performanceTotal"/>
    <result column="area" jdbcType="VARCHAR" property="area"/>
    <result column="user_telephone" jdbcType="VARCHAR" property="telephone"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_telephone, client_list, performance_now, performance_total, follow_list, 
    area
  </sql>
  <select id="selectByExample" parameterType="indi.group.his.model.WorkInformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="indi.group.his.model.WorkInformationExample">
    delete from work_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="indi.group.his.model.WorkInformation">
    insert into work_information (user_id, user_telephone, client_list, 
      performance_now, performance_total, follow_list, 
      area)
    values (#{userId,jdbcType=INTEGER}, #{userTelephone,jdbcType=VARCHAR}, #{clientList,jdbcType=VARCHAR}, 
      #{performanceNow,jdbcType=VARCHAR}, #{performanceTotal,jdbcType=VARCHAR}, #{followList,jdbcType=VARCHAR}, 
      #{area,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="indi.group.his.model.WorkInformation">
    insert into work_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userTelephone != null">
        user_telephone,
      </if>
      <if test="clientList != null">
        client_list,
      </if>
      <if test="performanceNow != null">
        performance_now,
      </if>
      <if test="performanceTotal != null">
        performance_total,
      </if>
      <if test="followList != null">
        follow_list,
      </if>
      <if test="area != null">
        area,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userTelephone != null">
        #{userTelephone,jdbcType=VARCHAR},
      </if>
      <if test="clientList != null">
        #{clientList,jdbcType=VARCHAR},
      </if>
      <if test="performanceNow != null">
        #{performanceNow,jdbcType=VARCHAR},
      </if>
      <if test="performanceTotal != null">
        #{performanceTotal,jdbcType=VARCHAR},
      </if>
      <if test="followList != null">
        #{followList,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update work_information
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userTelephone != null">
        user_telephone = #{record.userTelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.clientList != null">
        client_list = #{record.clientList,jdbcType=VARCHAR},
      </if>
      <if test="record.performanceNow != null">
        performance_now = #{record.performanceNow,jdbcType=VARCHAR},
      </if>
      <if test="record.performanceTotal != null">
        performance_total = #{record.performanceTotal,jdbcType=VARCHAR},
      </if>
      <if test="record.followList != null">
        follow_list = #{record.followList,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update work_information
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_telephone = #{record.userTelephone,jdbcType=VARCHAR},
      client_list = #{record.clientList,jdbcType=VARCHAR},
      performance_now = #{record.performanceNow,jdbcType=VARCHAR},
      performance_total = #{record.performanceTotal,jdbcType=VARCHAR},
      follow_list = #{record.followList,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="getAllUserAchivement" resultMap="WorkInfoUnionUserQuery" parameterType="int">
      select a.user_id,a.user_name,b.performance_now,b.performance_total,b.area,b.user_telephone from
      user as a,work_information as b where a.user_id = b.user_id ORDER BY performance_now 
    <if test="_parameter == 1">
        ASC
    </if>
    <if test="_parameter == 0">
        DESC
    </if>
  </select>
</mapper>